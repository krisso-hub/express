# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
        
      - name: Super Duper Linter
        # You may pin to the exact commit or the version.
        # uses: JustinGrote/Super-Duper-Linter@76596b0ef7d3e47ebdf7b2765c25db26b92df63e
        uses: JustinGrote/Super-Duper-Linter@preview
        with:
            # Name(s) of the linters you wish to run. Runs all by default
            linter: all # optional
            
            # Specify a relative path within your repository that contains the custom linters. Defaults to "linters". These definitions will OVERRIDE (not merge) definitions of the same name.
            customLinterPath: /* # optional
            
            # Set to True to enable advanced Powershell-level debugging
            debug: True # optional
            
            # Set to True to enable advanced Powershell-level verbose logging
            verbose: True # optional
            
            # Set to True to only display problems in the test result output
            problemsOnly: True # optional
            
            # Set to the number of linters to run concurrently. By default this is set to the number of logical cores in your system plus 1
            parallel: 3 # optional
            
            # Set to True to evaluate all files in the repository, not just those that have changed since the last PR
            all: True # optional
            
            # Set to true to validate the linter operation against defined test cases. This is useful if defining a new custom linter.
            test: True # optional
            
            # Choose what level of issue severity consistutes a failure of the linter and that it should exit with a non-zero exit status. Options are error, warning, and information. Options are inclusive of their previous choices (e.g. setting information also fails on warnings and errors)
            severity: error # optional
